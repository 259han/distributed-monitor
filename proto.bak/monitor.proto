syntax = "proto3";

package monitor;

option go_package = "github.com/han-fei/monitor/proto";

// 监控数据服务
service MonitorService {
  // 发送监控数据
  rpc SendMetrics(stream MetricsData) returns (MetricsResponse) {}
  // 获取监控数据
  rpc GetMetrics(MetricsRequest) returns (stream MetricsData) {}
}

// Raft服务
service RaftService {
  // 发送日志条目
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
  // 请求投票
  rpc RequestVote(VoteRequest) returns (VoteResponse) {}
}

// 监控数据
message MetricsData {
  string host_id = 1;
  int64 timestamp = 2;
  repeated Metric metrics = 3;
}

// 单个指标
message Metric {
  string name = 1;
  double value = 2;
  string unit = 3;
}

// 监控数据请求
message MetricsRequest {
  string host_id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  repeated string metric_names = 4;
}

// 监控数据响应
message MetricsResponse {
  bool success = 1;
  string message = 2;
}

// Raft日志条目请求
message AppendEntriesRequest {
  string leader_id = 1;
  uint64 term = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

// Raft日志条目响应
message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
  uint64 next_index = 3;
}

// Raft投票请求
message VoteRequest {
  uint64 term = 1;
  string candidate_id = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
}

// Raft投票响应
message VoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
}

// 日志条目
message LogEntry {
  uint64 term = 1;
  uint64 index = 2;
  bytes data = 3;
  EntryType type = 4;
}

// 日志条目类型
enum EntryType {
  COMMAND = 0;
  CONFIGURATION = 1;
  NOOP = 2;
} 